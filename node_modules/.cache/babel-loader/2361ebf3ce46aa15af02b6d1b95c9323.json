{"ast":null,"code":"var _jsxFileName = \"/Users/sean/web/website-portfolio/src/js/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../css/Wordle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"people\", \"should\", \"before\", \"little\", \"number\", \"course\", \"really\", \"always\", \"within\", \"around\", \"system\", \"though\", \"rather\", \"things\", \"during\", \"second\"];\n\nconst Wordle = () => {\n  _s();\n\n  let randomNum = Math.floor(Math.random() * words.length);\n  const chosenWord = words[randomNum];\n  let wordLength = chosenWord.length;\n  const board = Array(6);\n\n  for (let i = 0; i < board.length; i++) {\n    board[i] = [];\n\n    for (let j = 0; j < wordLength; j++) {\n      board[i][j] = \"\";\n    }\n  }\n\n  const [boardState, changeBoardState] = useState(board);\n\n  const keyPressed = e => {\n    console.log(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wordle-board\",\n    onKeyDown: keyPressed,\n    children: boardState.map((row, index) => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        row: row\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wordle, \"8hOeuJIjL/4NcaGzI9vMq5R7dSs=\");\n\n_c = Wordle;\n\nconst Row = _ref => {\n  let {\n    row\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wordle-row\",\n    children: row.map((square, index) => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        square: square\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Row;\n\nconst Square = _ref2 => {\n  let {\n    square\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wordle-square\",\n    children: square\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Square;\nexport default Wordle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wordle\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Square\");","map":{"version":3,"names":["React","useState","words","Wordle","randomNum","Math","floor","random","length","chosenWord","wordLength","board","Array","i","j","boardState","changeBoardState","keyPressed","e","console","log","map","row","index","Row","square","Square"],"sources":["/Users/sean/web/website-portfolio/src/js/Wordle.js"],"sourcesContent":["import React, {useState} from 'react';\nimport \"../css/Wordle.css\";\nconst words = [\n    \"people\",\n    \"should\",\n    \"before\",\n    \"little\",\n    \"number\",\n    \"course\",\n    \"really\",\n    \"always\",\n    \"within\",\n    \"around\",\n    \"system\",\n    \"though\",\n    \"rather\",\n    \"things\",\n    \"during\",\n    \"second\"\n]\n\nconst Wordle = () => {\n    let randomNum = Math.floor(Math.random() * words.length);\n    const chosenWord = words[randomNum];\n    let wordLength = chosenWord.length;\n    const board = Array(6);\n    for(let i=0; i<board.length; i++){\n        board[i] = [];\n        for(let j=0; j<wordLength; j++){\n            board[i][j] = \"\";\n        }\n    }\n    \n    const [boardState, changeBoardState] = useState(board);\n\n    const keyPressed = (e) => {\n        console.log(e);\n    }\n\n    return (\n        <div className=\"wordle-board\" onKeyDown={keyPressed} >\n           {boardState.map((row, index) => {\n            return <Row row={row} key={index}/>\n           })}\n        </div>\n    )\n}\nconst Row = ({row}) => {\n    return (\n        <div className=\"wordle-row\" > \n            {row.map((square, index) => {\n                return <Square square={square} key={index} />\n                })\n            }\n        </div>\n    )\n}\n\nconst Square = ({square}) => {\n\n    return (\n        <div className= \"wordle-square\" > \n            {square}\n        </div>\n    )\n}\n\n\nexport default Wordle;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,mBAAP;;AACA,MAAMC,KAAK,GAAG,CACV,QADU,EAEV,QAFU,EAGV,QAHU,EAIV,QAJU,EAKV,QALU,EAMV,QANU,EAOV,QAPU,EAQV,QARU,EASV,QATU,EAUV,QAVU,EAWV,QAXU,EAYV,QAZU,EAaV,QAbU,EAcV,QAdU,EAeV,QAfU,EAgBV,QAhBU,CAAd;;AAmBA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAAK,CAACM,MAAjC,CAAhB;EACA,MAAMC,UAAU,GAAGP,KAAK,CAACE,SAAD,CAAxB;EACA,IAAIM,UAAU,GAAGD,UAAU,CAACD,MAA5B;EACA,MAAMG,KAAK,GAAGC,KAAK,CAAC,CAAD,CAAnB;;EACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,KAAK,CAACH,MAArB,EAA6BK,CAAC,EAA9B,EAAiC;IAC7BF,KAAK,CAACE,CAAD,CAAL,GAAW,EAAX;;IACA,KAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACJ,UAAf,EAA2BI,CAAC,EAA5B,EAA+B;MAC3BH,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,IAAc,EAAd;IACH;EACJ;;EAED,MAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCf,QAAQ,CAACU,KAAD,CAA/C;;EAEA,MAAMM,UAAU,GAAIC,CAAD,IAAO;IACtBC,OAAO,CAACC,GAAR,CAAYF,CAAZ;EACH,CAFD;;EAIA,oBACI;IAAK,SAAS,EAAC,cAAf;IAA8B,SAAS,EAAED,UAAzC;IAAA,UACIF,UAAU,CAACM,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAgB;MAC/B,oBAAO,QAAC,GAAD;QAAK,GAAG,EAAED;MAAV,GAAoBC,KAApB;QAAA;QAAA;QAAA;MAAA,QAAP;IACA,CAFA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAzBD;;GAAMpB,M;;KAAAA,M;;AA0BN,MAAMqB,GAAG,GAAG,QAAW;EAAA,IAAV;IAACF;EAAD,CAAU;EACnB,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA,UACKA,GAAG,CAACD,GAAJ,CAAQ,CAACI,MAAD,EAASF,KAAT,KAAmB;MACxB,oBAAO,QAAC,MAAD;QAAQ,MAAM,EAAEE;MAAhB,GAA6BF,KAA7B;QAAA;QAAA;QAAA;MAAA,QAAP;IACC,CAFJ;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CATD;;MAAMC,G;;AAWN,MAAME,MAAM,GAAG,SAAc;EAAA,IAAb;IAACD;EAAD,CAAa;EAEzB,oBACI;IAAK,SAAS,EAAE,eAAhB;IAAA,UACKA;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAPD;;MAAMC,M;AAUN,eAAevB,MAAf"},"metadata":{},"sourceType":"module"}