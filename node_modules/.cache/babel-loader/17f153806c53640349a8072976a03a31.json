{"ast":null,"code":"var _jsxFileName = \"/Users/sean/web/website-portfolio/src/js/Wordle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"../css/Wordle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"people\", \"should\", \"before\", \"little\", \"number\", \"course\", \"really\", \"always\", \"within\", \"around\", \"system\", \"though\", \"rather\", \"things\", \"during\", \"second\"];\n\nconst Wordle = () => {\n  _s();\n\n  let randomNum = Math.floor(Math.random() * words.length);\n  const chosenWord = words[randomNum];\n  wordLength = chosenWord.length;\n  const board = Array(6);\n\n  for (i = 0; i < board.length; i++) {\n    board[i] = Array(wordLength).fill(\"\");\n  }\n\n  const [boardState, changeBoardState] = useState(board);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"wordle-board\",\n    children: boardState.map(row => {\n      return /*#__PURE__*/_jsxDEV(Row, {\n        board: row\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 20\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Wordle, \"8hOeuJIjL/4NcaGzI9vMq5R7dSs=\");\n\n_c = Wordle;\n\nconst Row = _ref => {\n  let {\n    row\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"wordle-row\",\n    children: row.map(square => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        square: square\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Row;\n\nconst Square = _ref2 => {\n  let {\n    square\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"wordle-square\",\n    children: square\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = Square;\nexport default Wordle;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wordle\");\n$RefreshReg$(_c2, \"Row\");\n$RefreshReg$(_c3, \"Square\");","map":{"version":3,"names":["React","useState","words","Wordle","randomNum","Math","floor","random","length","chosenWord","wordLength","board","Array","i","fill","boardState","changeBoardState","map","row","Row","square","Square"],"sources":["/Users/sean/web/website-portfolio/src/js/Wordle.js"],"sourcesContent":["import React, {useState} from 'react';\nimport \"../css/Wordle.css\";\nconst words = [\n    \"people\",\n    \"should\",\n    \"before\",\n    \"little\",\n    \"number\",\n    \"course\",\n    \"really\",\n    \"always\",\n    \"within\",\n    \"around\",\n    \"system\",\n    \"though\",\n    \"rather\",\n    \"things\",\n    \"during\",\n    \"second\"\n]\n\nconst Wordle = () => {\n    let randomNum = Math.floor(Math.random() * words.length);\n    const chosenWord = words[randomNum];\n    wordLength = chosenWord.length;\n    const board = Array(6);\n    for(i=0; i<board.length; i++){\n        board[i] = Array(wordLength).fill(\"\");\n    }\n\n    const [boardState, changeBoardState] = useState(board);\n\n\n    return (\n        <div class=\"wordle-board\" >\n           {boardState.map((row) => {\n            return <Row board={row} />\n           })}\n        </div>\n    )\n}\nconst Row = ({row}) => {\n    return (\n        <div class=\"wordle-row\" > \n            {row.map((square) => {\n                return <Square square={square} />\n                })\n            }\n        </div>\n    )\n}\n\nconst Square = ({square}) => {\n\n    return (\n        <div class= \"wordle-square\" > \n            {square}\n        </div>\n    )\n}\n\n\nexport default Wordle;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,mBAAP;;AACA,MAAMC,KAAK,GAAG,CACV,QADU,EAEV,QAFU,EAGV,QAHU,EAIV,QAJU,EAKV,QALU,EAMV,QANU,EAOV,QAPU,EAQV,QARU,EASV,QATU,EAUV,QAVU,EAWV,QAXU,EAYV,QAZU,EAaV,QAbU,EAcV,QAdU,EAeV,QAfU,EAgBV,QAhBU,CAAd;;AAmBA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EACjB,IAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,KAAK,CAACM,MAAjC,CAAhB;EACA,MAAMC,UAAU,GAAGP,KAAK,CAACE,SAAD,CAAxB;EACAM,UAAU,GAAGD,UAAU,CAACD,MAAxB;EACA,MAAMG,KAAK,GAAGC,KAAK,CAAC,CAAD,CAAnB;;EACA,KAAIC,CAAC,GAAC,CAAN,EAASA,CAAC,GAACF,KAAK,CAACH,MAAjB,EAAyBK,CAAC,EAA1B,EAA6B;IACzBF,KAAK,CAACE,CAAD,CAAL,GAAWD,KAAK,CAACF,UAAD,CAAL,CAAkBI,IAAlB,CAAuB,EAAvB,CAAX;EACH;;EAED,MAAM,CAACC,UAAD,EAAaC,gBAAb,IAAiCf,QAAQ,CAACU,KAAD,CAA/C;EAGA,oBACI;IAAK,KAAK,EAAC,cAAX;IAAA,UACII,UAAU,CAACE,GAAX,CAAgBC,GAAD,IAAS;MACxB,oBAAO,QAAC,GAAD;QAAK,KAAK,EAAEA;MAAZ;QAAA;QAAA;QAAA;MAAA,QAAP;IACA,CAFA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAnBD;;GAAMf,M;;KAAAA,M;;AAoBN,MAAMgB,GAAG,GAAG,QAAW;EAAA,IAAV;IAACD;EAAD,CAAU;EACnB,oBACI;IAAK,KAAK,EAAC,YAAX;IAAA,UACKA,GAAG,CAACD,GAAJ,CAASG,MAAD,IAAY;MACjB,oBAAO,QAAC,MAAD;QAAQ,MAAM,EAAEA;MAAhB;QAAA;QAAA;QAAA;MAAA,QAAP;IACC,CAFJ;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAQH,CATD;;MAAMD,G;;AAWN,MAAME,MAAM,GAAG,SAAc;EAAA,IAAb;IAACD;EAAD,CAAa;EAEzB,oBACI;IAAK,KAAK,EAAE,eAAZ;IAAA,UACKA;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAPD;;MAAMC,M;AAUN,eAAelB,MAAf"},"metadata":{},"sourceType":"module"}