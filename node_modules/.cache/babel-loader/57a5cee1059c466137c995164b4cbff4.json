{"ast":null,"code":"import _objectSpread from\"/Users/sean/web/seannimmo.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/sean/web/seannimmo.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'../css/Drench.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Drench=function Drench(){var colors=['#edae49','#d1495b','#6cd4ff','#c2eabd','#44355b','#ffcaaf'];// const squares = [...Array(14)].map(i => Array(14));\nvar squares=Array(14);var counter=0;for(var i=0;i<14;i++){squares[i]=[];for(var j=0;j<14;j++){var id=counter++;var color=getRandomColor(colors);var newSquare={row:i,col:j,id:id,drenched:false,color:color};squares[i].push(newSquare);}}squares[0][0].drenched=true;var _useState=useState(squares),_useState2=_slicedToArray(_useState,2),squareBoard=_useState2[0],setSquareBoard=_useState2[1];var _useState3=useState(30),_useState4=_slicedToArray(_useState3,2),getClickCounter=_useState4[0],setClickCounter=_useState4[1];var handleClick=function handleClick(newColor){//map returns a new array. you can spread objects?\n//you can't just change one element. you must create a new array.\nsetClickCounter(getClickCounter-1);var drenchedSquaresColored=squareBoard.map(function(row){return row.map(function(square){if(square.drenched){return _objectSpread(_objectSpread({},square),{},{color:newColor});}else{return square;}});});//handleDrench. Must do map twice. Once to change color of drenched. Then, to search for new squares to drench.\n//inspect array and search for indices of tiles to drench. Then loop through state and change those tiles? \nvar arrayOfIdsToDrench=bfs(drenchedSquaresColored,newColor);var drenchedState=drenchSquares(drenchedSquaresColored,arrayOfIdsToDrench);setSquareBoard(drenchedState);//win state\nif(getWinState(squareBoard,newColor)){setClickCounter(\"You Win!\");}};var bfs=function bfs(squares,newColor){var arrayOfIds=[];var queue=[];//add all drenched squares to queue\nfor(var i=0;i<squares.length;i++){for(var j=0;j<squares[0].length;j++){if(squares[i][j].drenched===true){queue.push(squares[i][j]);}}}while(queue.length>0){var discoveredSquare=queue.shift();var colOfSquare=discoveredSquare.col;var rowOfSquare=discoveredSquare.row;investigateHorizontal(discoveredSquare,colOfSquare,rowOfSquare,1,squares,newColor,queue,arrayOfIds);investigateHorizontal(discoveredSquare,colOfSquare,rowOfSquare,-1,squares,newColor,queue,arrayOfIds);investigateVertical(discoveredSquare,colOfSquare,rowOfSquare,1,squares,newColor,queue,arrayOfIds);investigateVertical(discoveredSquare,colOfSquare,rowOfSquare,-1,squares,newColor,queue,arrayOfIds);}return arrayOfIds;};var investigateHorizontal=function investigateHorizontal(discoveredSquare,colOfSquare,rowOfSquare,j,squares,newColor,queue,arrayOfIds){if(0<=colOfSquare+j&&colOfSquare+j<=13){var squareToInvestigate=squares[rowOfSquare][colOfSquare+j];if(squareToInvestigate.color===newColor&&!queue.includes(squareToInvestigate)&&!squareToInvestigate.drenched&&!arrayOfIds.includes(squareToInvestigate)){queue.push(squareToInvestigate);arrayOfIds.push(squareToInvestigate);}}};var investigateVertical=function investigateVertical(discoveredSquare,colOfSquare,rowOfSquare,i,squares,newColor,queue,arrayOfIds){if(0<=rowOfSquare+i&&rowOfSquare+i<=13){var squareToInvestigate=squares[rowOfSquare+i][colOfSquare];if(squareToInvestigate.color===newColor&&!queue.includes(squareToInvestigate)&&!squareToInvestigate.drenched&&!arrayOfIds.includes(squareToInvestigate)){queue.push(squareToInvestigate);arrayOfIds.push(squareToInvestigate);}}};var drenchSquares=function drenchSquares(squares,arrayOfIdsToDrench){var newState=squares.map(function(row){return row.map(function(square){if(arrayOfIdsToDrench.includes(square)){return _objectSpread(_objectSpread({},square),{},{drenched:true});}else{return square;}});});return newState;};var getWinState=function getWinState(squareBoard,newColor){var hasWon=true;squareBoard.forEach(function(row){row.forEach(function(square){if(newColor!==square.color){hasWon=false;}});});console.log(squareBoard);console.log(hasWon,newColor);return hasWon;};return/*#__PURE__*/_jsxs(\"div\",{className:\"game-board\",children:[/*#__PURE__*/_jsx(Board,{squares:squareBoard}),/*#__PURE__*/_jsx(Palette,{handleClick:handleClick,colors:colors}),/*#__PURE__*/_jsx(ClickCounter,{getClickCounter:getClickCounter})]});};var Board=function Board(_ref){var squares=_ref.squares;return/*#__PURE__*/_jsx(\"div\",{className:\"board\",children:squares.map(function(array){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:array.map(function(square){return/*#__PURE__*/_jsx(Square,{square:square},square.id);})},array[0].row);})});};var Palette=function Palette(_ref2){var handleClick=_ref2.handleClick,colors=_ref2.colors;return/*#__PURE__*/_jsx(\"div\",{className:\"palette\",children:colors.map(function(color){return/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){handleClick(color);},style:{background:color},className:\"palette-color\"},color);})});};var Square=function Square(props){return/*#__PURE__*/_jsx(\"div\",{className:\"square\",style:{background:props.square.color}});};var ClickCounter=function ClickCounter(_ref3){var getClickCounter=_ref3.getClickCounter;return/*#__PURE__*/_jsx(\"div\",{className:\"click-counter\",children:getClickCounter});};var getRandomColor=function getRandomColor(colors){var number=Math.floor(Math.random()*6);return colors[number];};export default Drench;","map":{"version":3,"names":["React","useState","Drench","colors","squares","Array","counter","i","j","id","color","getRandomColor","newSquare","row","col","drenched","push","squareBoard","setSquareBoard","getClickCounter","setClickCounter","handleClick","newColor","drenchedSquaresColored","map","square","arrayOfIdsToDrench","bfs","drenchedState","drenchSquares","getWinState","arrayOfIds","queue","length","discoveredSquare","shift","colOfSquare","rowOfSquare","investigateHorizontal","investigateVertical","squareToInvestigate","includes","newState","hasWon","forEach","console","log","Board","array","Palette","background","Square","props","ClickCounter","number","Math","floor","random"],"sources":["/Users/sean/web/seannimmo.github.io/src/js/Drench.js"],"sourcesContent":["import React, {useState} from 'react';\nimport '../css/Drench.css';\n\n\n\nconst Drench = () => {\n    const colors = ['#edae49', '#d1495b', '#6cd4ff', '#c2eabd', '#44355b', '#ffcaaf'];\n   // const squares = [...Array(14)].map(i => Array(14));\n   const squares = Array(14);\n   let counter = 0;\n   for(let i=0; i<14;i++){\n        squares[i] = [];\n        for(let j=0; j<14;j++){\n            let id = counter++;\n            let color = getRandomColor(colors);\n            let newSquare = {\n                row: i,\n                col: j,\n                id: id,\n                drenched: false,\n                color: color\n            }\n            squares[i].push(newSquare);\n        }\n    }\n\n    squares[0][0].drenched = true;\n    const [squareBoard, setSquareBoard] = useState(squares);\n    const [getClickCounter, setClickCounter] = useState(30);\n\n    const handleClick = newColor => {\n        //map returns a new array. you can spread objects?\n        //you can't just change one element. you must create a new array.\n\n        setClickCounter(getClickCounter - 1);\n        const drenchedSquaresColored = squareBoard.map(row => {\n            return row.map((square) => {\n                if(square.drenched){\n                    return {...square, color: newColor}\n                } else {\n                    return square\n                }\n            })\n        })\n\n        //handleDrench. Must do map twice. Once to change color of drenched. Then, to search for new squares to drench.\n        //inspect array and search for indices of tiles to drench. Then loop through state and change those tiles? \n        const arrayOfIdsToDrench = bfs(drenchedSquaresColored, newColor);\n        const drenchedState = drenchSquares(drenchedSquaresColored, arrayOfIdsToDrench)\n        setSquareBoard(drenchedState);\n\n        //win state\n        if(getWinState(squareBoard, newColor)){\n            setClickCounter(\"You Win!\");\n        }\n    }\n\n    const bfs = (squares, newColor) => {\n        const arrayOfIds = [];\n        const queue = [];\n        //add all drenched squares to queue\n        for(let i=0; i<squares.length; i++){\n            for(let j=0; j<squares[0].length; j++){\n                if(squares[i][j].drenched === true){\n                    queue.push(squares[i][j]);\n                }\n            }\n        }\n        while(queue.length > 0){\n            const discoveredSquare = queue.shift();\n            const colOfSquare = discoveredSquare.col;\n            const rowOfSquare = discoveredSquare.row;\n            investigateHorizontal(discoveredSquare, colOfSquare, rowOfSquare, 1, squares, newColor, queue, arrayOfIds)\n            investigateHorizontal(discoveredSquare, colOfSquare, rowOfSquare, -1, squares, newColor, queue, arrayOfIds)\n            investigateVertical(discoveredSquare, colOfSquare, rowOfSquare, 1, squares, newColor, queue, arrayOfIds)\n            investigateVertical(discoveredSquare, colOfSquare, rowOfSquare, -1, squares, newColor, queue, arrayOfIds)\n        }\n        return arrayOfIds;\n    }\n\n\n    const investigateHorizontal = (discoveredSquare, colOfSquare, rowOfSquare, j, squares, newColor, queue, arrayOfIds) => {\n        if(0 <= (colOfSquare + j) && (colOfSquare + j) <= 13) {\n            const squareToInvestigate = squares[rowOfSquare][colOfSquare + j];\n            if((squareToInvestigate.color === newColor) && (!queue.includes(squareToInvestigate)) && !squareToInvestigate.drenched && !arrayOfIds.includes(squareToInvestigate)){\n                queue.push(squareToInvestigate);\n                arrayOfIds.push(squareToInvestigate);\n            }\n        }\n    }\n\n    const investigateVertical = (discoveredSquare, colOfSquare, rowOfSquare, i, squares, newColor, queue, arrayOfIds) => {\n        if(0 <= (rowOfSquare + i) && (rowOfSquare + i) <= 13) {\n            const squareToInvestigate = squares[rowOfSquare + i][colOfSquare];\n            if(squareToInvestigate.color === newColor && (!queue.includes(squareToInvestigate)) && !squareToInvestigate.drenched && !arrayOfIds.includes(squareToInvestigate)){\n                queue.push(squareToInvestigate);\n                arrayOfIds.push(squareToInvestigate);\n            }\n        }\n    }\n\n    const drenchSquares = (squares, arrayOfIdsToDrench) => {\n        const newState = squares.map(row => {\n            return row.map((square) => {\n                if(arrayOfIdsToDrench.includes(square)) {\n                    return {...square, drenched: true}\n                } else {\n                    return square\n                }\n            })\n        })\n        return newState;\n    }\n\n    const getWinState = (squareBoard, newColor) => {\n        let hasWon = true;\n        squareBoard.forEach(row => {\n            row.forEach(square => {\n                if(newColor !== square.color){\n                    hasWon = false;\n                }\n            })\n        })\n        console.log(squareBoard)\n        console.log(hasWon, newColor);\n        return hasWon;\n    }\n\n    return (\n        <div className = 'game-board'>\n            {/* the prop to pass down is the state */}\n            <Board squares={squareBoard}/>\n            <Palette handleClick={handleClick} colors={colors} />\n            <ClickCounter getClickCounter={getClickCounter} />\n        </div>\n    )\n}\n\nconst Board = ({squares}) => {\n    return (\n        <div className='board'> \n            {squares.map(array => {\n                return <div key={array[0].row} className=\"row\">\n                    {array.map(square => {\n                        return <Square key={square.id} square={square} />\n                    })}\n                </div>\n            })}\n        </div>\n    )\n}\n\nconst Palette = ({handleClick, colors}) => {\n    return (\n        <div className='palette'>\n        {\n            colors.map(color => {\n                return <div key={color} onClick={() => {handleClick(color)}} style={{background: color}} className='palette-color'></div>\n            })\n        }\n        </div>\n    )\n}\n\nconst Square = (props) => {\n    return(\n        <div className='square' style={{background: props.square.color}}></div>\n    )\n}\n\nconst ClickCounter = ({getClickCounter}) => {\n    return (\n        <div className='click-counter'>{getClickCounter}</div>\n    )\n}\n\nconst getRandomColor = (colors) => {\n    let number = Math.floor(Math.random() * 6);\n    return colors[number];\n\n}\n\nexport default Drench"],"mappings":"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"},"metadata":{},"sourceType":"module"}